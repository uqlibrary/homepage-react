#!/bin/bash

echo "Pre-commit hook running..."

# Commits should not be made directly on Staging branch (or the branch that calls reusable in staging).
# (Do work in feature branch and then merge into Staging branch)

THIS_BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [[ "$THIS_BRANCH" == "staging" ]] ; then
  if [ ! -e ".git/MERGE_MODE" ]; then
    printf "\e[31m\n"
    echo "You are trying to commit directly on the $THIS_BRANCH branch."
    echo "Please commit in a feature branch and then merge into $THIS_BRANCH branch instead."
    printf "\n\e[1mAborting commit.\e[0m\n\n"
    exit 1
  fi
fi

# Run code style checks on staged files

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$")
FORMATTER="$(git rev-parse --show-toplevel)/node_modules/.bin/prettier-eslint"

if [[ "$STAGED_FILES" = "" ]]; then
  printf "\e[92mNo files to check.\e[0m\nProceeding with commit..."
  exit 0
fi

PASS=true

# Enable nvm if available
if [ -f ~/.nvm/nvm.sh ]; then
  source ~/.nvm/nvm.sh
fi

# Check for prettier-eslint
if [[ ! -x "$FORMATTER" ]]; then
  printf "\e[31mPlease install dependencies first by running '\e[0m\e[1mnpm install\e[0m\e[31m'! \e[0m\n"
  exit 1
fi

FILE_COUNT=$(echo "$STAGED_FILES" | wc -l)
FILES_ONE_LINE=$(echo -e ${STAGED_FILES/'\n'/' '});
SECONDS=0

printf "$FILE_COUNT staged file(s) will be checked for code styles.\n\n\e[31m"

"$FORMATTER" $FILES_ONE_LINE --list-different -l silent
if [[ "$?" != 0 ]]; then
  PASS=false
  printf "\nFile(s) above failed code style checks!"
else
  printf "\033[3A"
fi
printf "\e[0m\n\n"

echo "Code style checks completed in $SECONDS seconds."

if ! $PASS; then
  printf "\n\e[31m\e[1mCOMMIT REJECTED.\e[0m \e[31mYour commit contains files that should pass code style checks but do not.\e[0m\n"
  printf "\nPlease fix code styles and try again. Running '\e[1mnpm run codestyles:fix:staged\e[0m' is a good start."
  printf "\nYou can run '\e[1mnpm run eslint\e[0m' to view ESLint code quality issues, if any.\n\n"
  exit 1
fi

# printf "\n\e[32mRunning Jest...\e[0m\n"

# npm test -- --ci --findRelatedTests $STAGED_FILES

# if [[ "$?" != 0 ]]; then
#   printf "\e[31mEither Jest tests failed, or code coverage is not complete. Please fix and try again.\e[0m\n"
#   exit 2
# else

printf "\n\e[92mNo issues found. Good job!\e[0m\n\n"
echo "Proceeding with commit..."

# fi