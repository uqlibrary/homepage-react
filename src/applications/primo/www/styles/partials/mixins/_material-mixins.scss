// These mixins are taken from the SCSS source of Angular Material
// https://github.com/angular/material/blob/master/src/core/style/mixins.scss

// RTL <> LTR
// Use this to include and RTL reference, and pass the values for LTR and RTL respectively
// usage ex: @include rtl(right, auto, rtl-value(1em 2em 1em 4em));
// expected result: 
//    .class {
//      right: auto;
//    }
//    [dir=rtl] .class {
//      right: 1em 4em 1em 2em;
//    }
@mixin rtl($prop, $ltr-value, $rtl-value) {
  #{$prop}: $ltr-value;
  [dir=rtl] & {
    #{$prop}: $rtl-value;
  }
}
// Use this to sustitute a property in LTR with another in RTL
// usage: @include rtl-prop(right, left, 1em)
// expected result: 
//    .class {
//      right: 1em;
//    }
//    [dir=rtl] .class {
//      right: 0;
//      right: auto;
//      right: initial;
//      left: 1em;
//    }
@mixin rtl-prop($ltr-prop, $rtl-prop, $value, $reset-value) {
  #{$ltr-prop}: $value;
  [dir=rtl] & {
    #{$ltr-prop}: $reset-value;
    #{$rtl-prop}: $value;
  }
}

// A function to reverse padding (top left bottom right) -> (top right bottom left)
@function rtl-value($list) {
  @if length($list) == 4 {
    @return nth($list, 1) nth($list, 4) nth($list, 3) nth($list, 2)
  }
  @if length($list) == 5 {
    @return nth($list, 1) nth($list, 4) nth($list, 3) nth($list, 2) nth($list, 5)
  }
  @return $list;
}