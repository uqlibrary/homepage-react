// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cards component renders given ID for standar card 1`] = `
<WithStyles(ForwardRef(Card))
  className="testClass StandardCard "
  data-analyticsid="test-card"
  data-testid="test-card"
  id="test-card"
  style={Object {}}
  variant="elevation"
>
  <WithStyles(ForwardRef(CardHeader))
    action={<React.Fragment />}
    classes={
      Object {
        "root": undefined,
      }
    }
    style={
      Object {
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h2",
        "data-testid": "test-card-header",
        "variant": "h5",
      }
    }
  />
  <WithStyles(ForwardRef(CardContent))
    className=""
    data-testid="test-card-content"
    style={Object {}}
  />
</WithStyles(ForwardRef(Card))>
`;

exports[`Cards component renders with custom colours and full height 1`] = `
<WithStyles(ForwardRef(Card))
  className="undefined StandardCard "
  data-analyticsid="standard-card-card-title"
  data-testid="standard-card-card-title"
  id="standard-card-card-title"
  style={
    Object {
      "backgroundColor": "#fcc",
      "height": "100%",
    }
  }
  variant="elevation"
>
  <WithStyles(ForwardRef(CardHeader))
    action={<React.Fragment />}
    classes={
      Object {
        "root": "#555",
      }
    }
    style={
      Object {
        "backgroundColor": "#ccc",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "color": "#111",
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h2",
        "data-testid": "standard-card-card-title-header",
        "variant": "h5",
      }
    }
  />
  <WithStyles(ForwardRef(CardContent))
    className="no-padding"
    data-testid="standard-card-card-title-content"
    style={
      Object {
        "color": "blue !important",
      }
    }
  />
</WithStyles(ForwardRef(Card))>
`;

exports[`Cards component renders with small title and as a subcard 1`] = `
<WithStyles(ForwardRef(Card))
  className="testClass StandardCard "
  data-analyticsid="standard-card-card-title"
  data-testid="standard-card-card-title"
  id="standard-card-card-title"
  style={Object {}}
  variant="elevation"
>
  <WithStyles(ForwardRef(CardHeader))
    action={<React.Fragment />}
    classes={
      Object {
        "root": undefined,
      }
    }
    style={
      Object {
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h3",
        "data-testid": "standard-card-card-title-header",
        "variant": "h6",
      }
    }
  />
  <WithStyles(ForwardRef(CardContent))
    className=""
    data-testid="standard-card-card-title-content"
    style={Object {}}
  />
</WithStyles(ForwardRef(Card))>
`;

exports[`Cards component renders with square top and accent header 1`] = `
<WithStyles(ForwardRef(Card))
  className="undefined StandardCard "
  data-analyticsid="standard-card-card-title"
  data-testid="standard-card-card-title"
  id="standard-card-card-title"
  style={Object {}}
  variant="elevation"
>
  <WithStyles(ForwardRef(CardHeader))
    action={<React.Fragment />}
    classes={
      Object {
        "root": "#333",
      }
    }
    style={
      Object {
        "borderTopLeftRadius": 0,
        "borderTopRightRadius": 0,
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h2",
        "data-testid": "standard-card-card-title-header",
        "variant": "h5",
      }
    }
  />
  <WithStyles(ForwardRef(CardContent))
    className=""
    data-testid="standard-card-card-title-content"
    style={Object {}}
  />
</WithStyles(ForwardRef(Card))>
`;

exports[`Cards component renders with title and help button 1`] = `
<WithStyles(ForwardRef(Card))
  className="testClass StandardCard "
  data-analyticsid="standard-card-card-title"
  data-testid="standard-card-card-title"
  id="standard-card-card-title"
  style={Object {}}
  variant="elevation"
>
  <WithStyles(ForwardRef(CardHeader))
    action={<React.Fragment />}
    classes={
      Object {
        "root": undefined,
      }
    }
    style={
      Object {
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h2",
        "data-testid": "standard-card-card-title-header",
        "variant": "h5",
      }
    }
  />
  <WithStyles(ForwardRef(CardContent))
    className=""
    data-testid="standard-card-card-title-content"
    style={Object {}}
  />
</WithStyles(ForwardRef(Card))>
`;

exports[`Cards component renders with title and no help icon 1`] = `
<WithStyles(ForwardRef(Card))
  className="testClass StandardCard "
  data-analyticsid="standard-card-card-title"
  data-testid="standard-card-card-title"
  id="standard-card-card-title"
  style={Object {}}
  variant="elevation"
>
  <WithStyles(ForwardRef(CardHeader))
    action={<React.Fragment />}
    classes={
      Object {
        "root": undefined,
      }
    }
    style={
      Object {
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h2",
        "data-testid": "standard-card-card-title-header",
        "variant": "h5",
      }
    }
  />
  <WithStyles(ForwardRef(CardContent))
    className=""
    data-testid="standard-card-card-title-content"
    style={Object {}}
  />
</WithStyles(ForwardRef(Card))>
`;

exports[`StandardCard component should render StyledCard with same props 1`] = `
<WithStyles(Cards)
  test1="test1value"
  test2="test2value"
/>
`;
